
-- 0.1.1 first alpha release

-- 0.1.2

* error are now BDB::Fatal, BDB::Lock (rather than BDBFatal, ...) 
* remove BDBKeyExist : it return Qfalse if it fail, or the value inserted
* #put return the value
* change rb_eFatal in bdb_eFatal
* option for array_base (0 or 1)
* corrected flags27
* support for bt_compare, bt_prefix, dup_compare, h_hash (see func.rb)
* can store nil (like 1.6,  a["aa"] = nil don't delete the key)
* add #dup_count (count), #get_dup (dup) for BDB::Common
* add #partial_clear (same than #clear_partial)
* corrected #put for set_partial
* remove bdb_recno_length (don't do what I want)
* corrected #close (thread_local_aset)
* corrected BDB::Unknown (it created object of class BDB::Unknown)
* remove shift for Common (only for Recno and Queue)
* corrected #length for bdb < 3 with BDB::TXN
* add test for RUNIT (only Btree, Hash, Recno)
* tested with 3.1.17
* add methods fetch, store, reject!, reject, member?, index, indexes (like 1.5)
* add initialize

-- 0.1.3

* Queue pad automatically the value (for put && get)
* partial_get (set) is strange ???
* add Queue#pad
* re_pad return a character (not an int)
* corrected nil for Queue
* add test for Queue
* corrected 2 bugs (thanks Takaaki Tateishi <ttate@jaist.ac.jp>)
   - struct timeval
   - rb_struct_define

-- 0.1.4

* corrected rb_iterate()

-- 0.1.5

* corrected (thanks Phillipe Lucas <philippe.lucas@technologies-gid.com>)
  - db_get_both()
  - flag --disable-thread to compile on some "stupid" system

* add #invert, #clear, #update, #replace

-- 0.1.6

* support for 3.2.9 : Thanks Rick Ohnemus <rjohnemus@systemware-inc.com>
* corrected flags for DUP_SORT
* add BDB::Env.set_flags for 3.2.9
* 3.2.9 : bt_compare, bt_prefix, dup_compare, h_hash take now 3 args

-- 0.1.7

* BDB::Env#remove is now a class method
* corrected Lock for DB < 3
* added Log
* tests for Log
* error BDB::LockError, BDB::LockHeld, BDB::LockGranted, BDB::LockDead


